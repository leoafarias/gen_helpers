name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
      
      - name: Install dependencies
        run: dart pub get
      
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
      
      - name: Analyze project source
        run: dart analyze --fatal-infos
  
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        sdk: [stable, beta]
        exclude:
          # Only test beta on ubuntu to save CI time
          - os: macos-latest
            sdk: beta
          - os: windows-latest
            sdk: beta
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}
      
      - name: Install dependencies
        run: dart pub get
      
      - name: Run tests
        run: dart test
      
      - name: Check test coverage
        if: matrix.os == 'ubuntu-latest' && matrix.sdk == 'stable'
        run: |
          dart pub global activate coverage
          dart test --coverage=coverage
          dart pub global run coverage:format_coverage --lcov --in=coverage --out=coverage/lcov.info --report-on=lib
      
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.sdk == 'stable'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage/lcov.info
          fail_ci_if_error: false
  
  publish-dry-run:
    runs-on: ubuntu-latest
    needs: [analyze, test]
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: stable
      
      - name: Install dependencies
        run: dart pub get
      
      - name: Check package scores
        run: dart pub publish --dry-run
